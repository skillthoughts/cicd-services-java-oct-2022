pipeline
{
agent any
parameters {
    choice(name: 'select_target_env', choices: ['dev', 'qa', 'stage', 'uat', 'prod'], description: 'select target env to deploy' )
    choice(name: 'select_app_version', choices: ['2.0', '3.0', '4.0'], description: 'select version required version')
	choice(name: 'select_deployment_type', choices: ['buildndeploy', 'onlydeploy'], description: 'select deployment type' )
  }
stages
{
stage('Checkout SCM')
{
   steps
   {
   script
   {
   git 'https://github.com/skillthoughts/cicd-services-java-oct-2022.git'
   }
   }
   }
stage('Maven Build')
{
   steps
   {
   script
   {
   if("${params.select_deployment_type}" == "buildndeploy")
    {
   sh "mvn clean package"
   }
   }
  }
}
stage('print param value')
{
steps
{
script
{
if("${params.select_deployment_type}" == "buildndeploy")
    {
echo "${params.select_app_version}"
}
}
}
}
stage('Docker Image Build') {
      steps {
      script
      {
	  if("${params.select_deployment_type}" == "buildndeploy")
    {
      withDockerRegistry(credentialsId: 'docker-reg-creds', url: 'https://index.docker.io/v1/') {
    sh "docker build -t skillthoughts/tomcat:${params.select_app_version} ."
    sh "docker push skillthoughts/tomcat:${params.select_app_version}"
}
      }
	  }
      }
    }
    stage('deploy application using ansible on dev env')
    {
    steps
    {
    script
    {
    if(("${params.select_target_env}" == "dev") && ("${params.select_deployment_type}" == "buildndeploy") || ("${params.select_deployment_type}" == "onlydeploy"))
    {
    sh "cp -rf $WORKSPACE/ansible /etc"
    sh "cat /dev/null > /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo port: 76 >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo envname: dev >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo appversion: ${params.select_app_version} >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    ansiblePlaybook disableHostKeyChecking: true, installation: 'PATH', inventory: '/etc/ansible/roles/skillthoughts/tests/inventory', playbook: '/etc/ansible/roles/skillthoughts/tests/test.yml'
    }
    }
    }
    }

     stage('deploy application using ansible on qa env')
    {
    steps
    {
    script
    {
    if(("${params.select_target_env}" == "qa") && ("${params.select_deployment_type}" == "buildndeploy") || ("${params.select_deployment_type}" == "onlydeploy"))
    {
    sh "cp -rf $WORKSPACE/ansible /etc"
    sh "cat /dev/null > /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo port: 81 >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo envname: qa >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo appversion: ${params.select_app_version} >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    ansiblePlaybook disableHostKeyChecking: true, installation: 'PATH', inventory: '/etc/ansible/roles/skillthoughts/tests/inventory', playbook: '/etc/ansible/roles/skillthoughts/tests/test.yml'
    }
    }
    }
    }

     stage('deploy application using ansible on stage env')
    {
    steps
    {
    script
    {
    if(("${params.select_target_env}") == "stage" && ("${params.select_deployment_type}" == "buildndeploy") || ("${params.select_deployment_type}" == "onlydeploy"))
    {
    sh "cp -rf $WORKSPACE/ansible /etc"
    sh "cat /dev/null > /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo port: 78 >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo envname: stage >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo appversion: ${params.select_app_version} >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    ansiblePlaybook disableHostKeyChecking: true, installation: 'PATH', inventory: '/etc/ansible/roles/skillthoughts/tests/inventory', playbook: '/etc/ansible/roles/skillthoughts/tests/test.yml'
    }
    }
    }
    }

     stage('deploy application using ansible on uat env')
    {
    steps
    {
    script
    {
    if(("${params.select_target_env}") == "uat" && ("${params.select_deployment_type}" == "buildndeploy") || ("${params.select_deployment_type}" == "onlydeploy"))
    {
    sh "cp -rf $WORKSPACE/ansible /etc"
    sh "cat /dev/null > /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo port: 82 >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo envname: uat >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo appversion: ${params.select_app_version} >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    ansiblePlaybook disableHostKeyChecking: true, installation: 'PATH', inventory: '/etc/ansible/roles/skillthoughts/tests/inventory', playbook: '/etc/ansible/roles/skillthoughts/tests/test.yml'
    }
    }
    }
    }

     stage('deploy application using ansible on prod env')
    {
    steps
    {
    script
    {
    if(("${params.select_target_env}" == "prod") && ("${params.select_deployment_type}" == "buildndeploy") || ("${params.select_deployment_type}" == "onlydeploy"))
    {
    sh "cp -rf $WORKSPACE/ansible /etc"
    sh "cat /dev/null > /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo port: 80 >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo envname: prod >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    sh "echo appversion: ${params.select_app_version} >> /etc/ansible/roles/skillthoughts/vars/main.yml"
    ansiblePlaybook disableHostKeyChecking: true, installation: 'PATH', inventory: '/etc/ansible/roles/skillthoughts/tests/inventory', playbook: '/etc/ansible/roles/skillthoughts/tests/test.yml'
    }
    }
    }
    }
}
}
